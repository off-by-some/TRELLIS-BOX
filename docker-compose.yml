version: '3.8'

services:
  trellis:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        # Override these in .env file or here
        CUDA_VERSION: ${CUDA_VERSION:-12.1.0}
        CUDNN_VERSION: ${CUDNN_VERSION:-8}
        UBUNTU_VERSION: ${UBUNTU_VERSION:-22.04}
        PYTHON_VERSION: ${PYTHON_VERSION:-3.10}
        POETRY_VERSION: ${POETRY_VERSION:-1.8.3}
        KAOLIN_VERSION: ${KAOLIN_VERSION:-0.17.0}
        APP_USER: ${APP_USER:-appuser}
        APP_UID: ${APP_UID:-1000}
        APP_PORT: ${APP_PORT:-8501}
    image: trellis-box:latest
    container_name: trellis-box
    ports:
      - "${HOST_PORT:-8501}:${APP_PORT:-8501}"
    volumes:
      # Persist model cache between runs (using non-root user home)
      - trellis-cache:/home/${APP_USER:-appuser}/.cache
      # Persist Hugging Face cache
      - huggingface-cache:/home/${APP_USER:-appuser}/.cache/huggingface
      # Persist rembg model cache
      - rembg-cache:/home/${APP_USER:-appuser}/.u2net
      # Persist generated outputs
      - ./outputs:/tmp/Trellis-demo
    environment:
      # Optional: Add any runtime environment variables here
      - CUDA_VISIBLE_DEVICES=${CUDA_VISIBLE_DEVICES:-all}
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: ${GPU_COUNT:-all}
              capabilities: [gpu]
    stdin_open: true
    tty: true
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python3", "-c", "import requests; requests.get('http://localhost:${APP_PORT:-8501}/_stcore/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  trellis-cache:
    driver: local
  huggingface-cache:
    driver: local
  rembg-cache:
    driver: local

